ARM GAS  /tmp/ccz7jeJ5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB127:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2021 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccz7jeJ5.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "usart.h"
  44:Src/main.c    **** #include "gpio.h"
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PTD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PM */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PV */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** /* USER CODE BEGIN PFP */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /**
  84:Src/main.c    ****   * @brief  The application entry point.
  85:Src/main.c    ****   * @retval int
  86:Src/main.c    ****   */
  87:Src/main.c    **** int main(void)
ARM GAS  /tmp/ccz7jeJ5.s 			page 3


  88:Src/main.c    **** {
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USART2_UART_Init();
 112:Src/main.c    ****   /* USER CODE BEGIN 2 */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END 2 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Infinite loop */
 117:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 118:Src/main.c    ****   while (1)
 119:Src/main.c    ****   {
 120:Src/main.c    ****     /* USER CODE END WHILE */
 121:Src/main.c    **** 
 122:Src/main.c    ****     /* USER CODE BEGIN 3 */
 123:Src/main.c    ****   }
 124:Src/main.c    ****   /* USER CODE END 3 */
 125:Src/main.c    **** }
 126:Src/main.c    **** 
 127:Src/main.c    **** /**
 128:Src/main.c    ****   * @brief System Clock Configuration
 129:Src/main.c    ****   * @retval None
 130:Src/main.c    ****   */
 131:Src/main.c    **** void SystemClock_Config(void)
 132:Src/main.c    **** {
  29              		.loc 1 132 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
ARM GAS  /tmp/ccz7jeJ5.s 			page 4


  41              		.cfi_def_cfa_offset 96
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 133 3 view .LVU1
  43              		.loc 1 133 22 is_stmt 0 view .LVU2
  44 0004 3422     		movs	r2, #52
  45 0006 0021     		movs	r1, #0
  46 0008 07A8     		add	r0, sp, #28
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 134 3 is_stmt 1 view .LVU3
  50              		.loc 1 134 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 0294     		str	r4, [sp, #8]
  53 0012 0394     		str	r4, [sp, #12]
  54 0014 0494     		str	r4, [sp, #16]
  55 0016 0594     		str	r4, [sp, #20]
  56 0018 0694     		str	r4, [sp, #24]
 135:Src/main.c    **** 
 136:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 137:Src/main.c    ****   */
 138:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  57              		.loc 1 138 3 is_stmt 1 view .LVU5
  58              	.LBB2:
  59              		.loc 1 138 3 view .LVU6
  60 001a 0094     		str	r4, [sp]
  61              		.loc 1 138 3 view .LVU7
  62 001c 1B4B     		ldr	r3, .L3
  63 001e 1A6C     		ldr	r2, [r3, #64]
  64 0020 42F08052 		orr	r2, r2, #268435456
  65 0024 1A64     		str	r2, [r3, #64]
  66              		.loc 1 138 3 view .LVU8
  67 0026 1B6C     		ldr	r3, [r3, #64]
  68 0028 03F08053 		and	r3, r3, #268435456
  69 002c 0093     		str	r3, [sp]
  70              		.loc 1 138 3 view .LVU9
  71 002e 009B     		ldr	r3, [sp]
  72              	.LBE2:
  73              		.loc 1 138 3 view .LVU10
 139:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  74              		.loc 1 139 3 view .LVU11
  75              	.LBB3:
  76              		.loc 1 139 3 view .LVU12
  77 0030 0194     		str	r4, [sp, #4]
  78              		.loc 1 139 3 view .LVU13
  79 0032 174A     		ldr	r2, .L3+4
  80 0034 1368     		ldr	r3, [r2]
  81 0036 23F44043 		bic	r3, r3, #49152
  82 003a 43F48043 		orr	r3, r3, #16384
  83 003e 1360     		str	r3, [r2]
  84              		.loc 1 139 3 view .LVU14
  85 0040 1368     		ldr	r3, [r2]
  86 0042 03F44043 		and	r3, r3, #49152
  87 0046 0193     		str	r3, [sp, #4]
  88              		.loc 1 139 3 view .LVU15
  89 0048 019B     		ldr	r3, [sp, #4]
  90              	.LBE3:
ARM GAS  /tmp/ccz7jeJ5.s 			page 5


  91              		.loc 1 139 3 view .LVU16
 140:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 141:Src/main.c    ****   */
 142:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  92              		.loc 1 142 3 view .LVU17
  93              		.loc 1 142 36 is_stmt 0 view .LVU18
  94 004a 0225     		movs	r5, #2
  95 004c 0795     		str	r5, [sp, #28]
 143:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  96              		.loc 1 143 3 is_stmt 1 view .LVU19
  97              		.loc 1 143 30 is_stmt 0 view .LVU20
  98 004e 0123     		movs	r3, #1
  99 0050 0A93     		str	r3, [sp, #40]
 144:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 100              		.loc 1 144 3 is_stmt 1 view .LVU21
 101              		.loc 1 144 41 is_stmt 0 view .LVU22
 102 0052 1023     		movs	r3, #16
 103 0054 0B93     		str	r3, [sp, #44]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 104              		.loc 1 145 3 is_stmt 1 view .LVU23
 105              		.loc 1 145 34 is_stmt 0 view .LVU24
 106 0056 0D95     		str	r5, [sp, #52]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 107              		.loc 1 146 3 is_stmt 1 view .LVU25
 108              		.loc 1 146 35 is_stmt 0 view .LVU26
 109 0058 0E94     		str	r4, [sp, #56]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 110              		.loc 1 147 3 is_stmt 1 view .LVU27
 111              		.loc 1 147 30 is_stmt 0 view .LVU28
 112 005a 0F93     		str	r3, [sp, #60]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 113              		.loc 1 148 3 is_stmt 1 view .LVU29
 114              		.loc 1 148 30 is_stmt 0 view .LVU30
 115 005c 4FF4A873 		mov	r3, #336
 116 0060 1093     		str	r3, [sp, #64]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 117              		.loc 1 149 3 is_stmt 1 view .LVU31
 118              		.loc 1 149 30 is_stmt 0 view .LVU32
 119 0062 0423     		movs	r3, #4
 120 0064 1193     		str	r3, [sp, #68]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 121              		.loc 1 150 3 is_stmt 1 view .LVU33
 122              		.loc 1 150 30 is_stmt 0 view .LVU34
 123 0066 1295     		str	r5, [sp, #72]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 124              		.loc 1 151 3 is_stmt 1 view .LVU35
 125              		.loc 1 151 30 is_stmt 0 view .LVU36
 126 0068 1395     		str	r5, [sp, #76]
 152:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 127              		.loc 1 152 3 is_stmt 1 view .LVU37
 128              		.loc 1 152 7 is_stmt 0 view .LVU38
 129 006a 07A8     		add	r0, sp, #28
 130 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 131              	.LVL1:
 153:Src/main.c    ****   {
 154:Src/main.c    ****     Error_Handler();
 155:Src/main.c    ****   }
ARM GAS  /tmp/ccz7jeJ5.s 			page 6


 156:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 157:Src/main.c    ****   */
 158:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 132              		.loc 1 158 3 is_stmt 1 view .LVU39
 133              		.loc 1 158 31 is_stmt 0 view .LVU40
 134 0070 0F23     		movs	r3, #15
 135 0072 0293     		str	r3, [sp, #8]
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 160:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 136              		.loc 1 160 3 is_stmt 1 view .LVU41
 137              		.loc 1 160 34 is_stmt 0 view .LVU42
 138 0074 0395     		str	r5, [sp, #12]
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139              		.loc 1 161 3 is_stmt 1 view .LVU43
 140              		.loc 1 161 35 is_stmt 0 view .LVU44
 141 0076 0494     		str	r4, [sp, #16]
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 142              		.loc 1 162 3 is_stmt 1 view .LVU45
 143              		.loc 1 162 36 is_stmt 0 view .LVU46
 144 0078 4FF48053 		mov	r3, #4096
 145 007c 0593     		str	r3, [sp, #20]
 163:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 146              		.loc 1 163 3 is_stmt 1 view .LVU47
 147              		.loc 1 163 36 is_stmt 0 view .LVU48
 148 007e 0694     		str	r4, [sp, #24]
 164:Src/main.c    **** 
 165:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 149              		.loc 1 165 3 is_stmt 1 view .LVU49
 150              		.loc 1 165 7 is_stmt 0 view .LVU50
 151 0080 2946     		mov	r1, r5
 152 0082 02A8     		add	r0, sp, #8
 153 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 154              	.LVL2:
 166:Src/main.c    ****   {
 167:Src/main.c    ****     Error_Handler();
 168:Src/main.c    ****   }
 169:Src/main.c    **** }
 155              		.loc 1 169 1 view .LVU51
 156 0088 15B0     		add	sp, sp, #84
 157              	.LCFI2:
 158              		.cfi_def_cfa_offset 12
 159              		@ sp needed
 160 008a 30BD     		pop	{r4, r5, pc}
 161              	.L4:
 162              		.align	2
 163              	.L3:
 164 008c 00380240 		.word	1073887232
 165 0090 00700040 		.word	1073770496
 166              		.cfi_endproc
 167              	.LFE127:
 169              		.section	.text.main,"ax",%progbits
 170              		.align	1
 171              		.global	main
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccz7jeJ5.s 			page 7


 177              	main:
 178              	.LFB126:
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 179              		.loc 1 88 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ Volatile: function does not return.
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 08B5     		push	{r3, lr}
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  96:Src/main.c    **** 
 189              		.loc 1 96 3 view .LVU53
 190 0002 FFF7FEFF 		bl	HAL_Init
 191              	.LVL3:
 103:Src/main.c    **** 
 192              		.loc 1 103 3 view .LVU54
 193 0006 FFF7FEFF 		bl	SystemClock_Config
 194              	.LVL4:
 110:Src/main.c    ****   MX_USART2_UART_Init();
 195              		.loc 1 110 3 view .LVU55
 196 000a FFF7FEFF 		bl	MX_GPIO_Init
 197              	.LVL5:
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 198              		.loc 1 111 3 view .LVU56
 199 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 200              	.LVL6:
 201              	.L6:
 118:Src/main.c    ****   {
 202              		.loc 1 118 3 discriminator 1 view .LVU57
 123:Src/main.c    ****   /* USER CODE END 3 */
 203              		.loc 1 123 3 discriminator 1 view .LVU58
 118:Src/main.c    ****   {
 204              		.loc 1 118 9 discriminator 1 view .LVU59
 205 0012 FEE7     		b	.L6
 206              		.cfi_endproc
 207              	.LFE126:
 209              		.section	.text.Error_Handler,"ax",%progbits
 210              		.align	1
 211              		.global	Error_Handler
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv4-sp-d16
 217              	Error_Handler:
 218              	.LFB128:
 170:Src/main.c    **** 
 171:Src/main.c    **** /* USER CODE BEGIN 4 */
 172:Src/main.c    **** 
 173:Src/main.c    **** /* USER CODE END 4 */
 174:Src/main.c    **** 
 175:Src/main.c    **** /**
 176:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 177:Src/main.c    ****   * @retval None
 178:Src/main.c    ****   */
ARM GAS  /tmp/ccz7jeJ5.s 			page 8


 179:Src/main.c    **** void Error_Handler(void)
 180:Src/main.c    **** {
 219              		.loc 1 180 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 181:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 182:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 183:Src/main.c    **** 
 184:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 185:Src/main.c    **** }
 224              		.loc 1 185 1 view .LVU61
 225 0000 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE128:
 229              		.text
 230              	.Letext0:
 231              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 232              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 233              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 234              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 235              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 236              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 237              		.file 8 "Inc/usart.h"
 238              		.file 9 "Inc/gpio.h"
 239              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 240              		.file 11 "<built-in>"
ARM GAS  /tmp/ccz7jeJ5.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccz7jeJ5.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccz7jeJ5.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccz7jeJ5.s:164    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccz7jeJ5.s:170    .text.main:0000000000000000 $t
     /tmp/ccz7jeJ5.s:177    .text.main:0000000000000000 main
     /tmp/ccz7jeJ5.s:210    .text.Error_Handler:0000000000000000 $t
     /tmp/ccz7jeJ5.s:217    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
